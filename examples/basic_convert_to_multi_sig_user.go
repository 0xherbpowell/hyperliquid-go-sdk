package main

import (
	"fmt"
	"log"

	"hyperliquid-go-sdk/pkg/utils"
)

func main() {
	// Setup with testnet
	address, _, exchange := Setup(utils.TestnetAPIURL, true)

	// Check if we're in agent mode (account address differs from wallet address)
	// Agents do not have permission to convert to multi-sig user
	walletAddress := utils.GetAddressFromPrivateKey(exchange.PrivateKey)
	if address != walletAddress {
		log.Fatal("Agents do not have permission to convert to multi-sig user")
	}

	fmt.Printf("Converting user %s to multi-sig user...\n", address)

	// Authorized users are the public addresses of the wallets that will be able to sign on behalf of the multi-sig user.
	// Important notes:
	// - Only existing users may be used. In other words, the authorized users must have deposited. Otherwise this conversion will fail.
	// - The multi-sig signatures must be generated by the authorized user's wallet. Agent/API wallets cannot be used.
	
	// WARNING: Replace these with actual authorized user addresses!
	// These are placeholder addresses that will likely cause the operation to fail
	authorizedUser1 := "0x0000000000000000000000000000000000000000"
	authorizedUser2 := "0x0000000000000000000000000000000000000001"
	authorizedUsers := []string{authorizedUser1, authorizedUser2}
	
	// Threshold determines how many signatures are required (e.g., 1 out of 2, 2 out of 2, etc.)
	threshold := 1

	fmt.Printf("Authorized users: %v\n", authorizedUsers)
	fmt.Printf("Threshold: %d\n", threshold)

	convertResult, err := exchange.ConvertToMultiSigUser(authorizedUsers, threshold)
	if err != nil {
		log.Printf("Failed to convert to multi-sig user: %v", err)
		fmt.Println("\nCommon reasons for failure:")
		fmt.Println("1. One or more authorized users have not deposited (not existing users)")
		fmt.Println("2. Invalid authorized user addresses")
		fmt.Println("3. Threshold is invalid (must be <= number of authorized users)")
		fmt.Println("4. User is already a multi-sig user")
		fmt.Println("5. Network or API issues")
		return
	}

	fmt.Println("Convert to multi-sig user result:")
	PrintOrderResult(convertResult)

	fmt.Println("\nIMPORTANT: After conversion to multi-sig:")
	fmt.Println("- You will need signatures from the required number of authorized users for transactions")
	fmt.Println("- This action cannot be easily reversed")
	fmt.Println("- Make sure you have access to the authorized user wallets")
}